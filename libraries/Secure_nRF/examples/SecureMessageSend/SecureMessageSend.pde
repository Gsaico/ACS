/**
 * Secure nRF test
 * 
 * Ronald Diaz
 */
 
// Dependencies
#include <arduino.h>
#include <AES.h>
#include <CRC16.h>
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <Secure_nRF.h>

// Instantiate Secure nRF object
Secure_nRF snrf;

// Local Encryption and nRF Channel params
byte localKey[] = {
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
byte localIV[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 };
const uint64_t localDeviceId = 0xF0F0F0F0E1LL;

// Destination Encryption and nRF Channel params
byte destKey[] = {
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
byte destIV[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 };
const uint64_t destDeviceId = 0xF0F0F0F0E2LL;

long counter = 0;

void setup()
{
  snrf.begin();
  
  Serial.begin(9600);
  Serial.println("setup");
  
  AESParams local = { *localKey, *localIV };
  snrf.setLocalAESParams(local);
  snrf.setLocalDeviceId(localDeviceId);
  
  AESParams dest = { *destKey, *destIV };
  snrf.setDestinationAESParams(dest);
  snrf.setDestinationDeviceId(destDeviceId);
  
  Serial.println("post setup");
}

void loop()
{  
  // Send a Message to the Destination Device
  String cStr = String(counter);
  byte message[32] = "This is an example message:    ";
  message[27] = cStr[0];
  message[28] = cStr[1];
  message[29] = cStr[2];
  
  snrf.sendMessage(message);
  Serial.write(message, 32);
  Serial.println(" ");
  
  counter++;
  
  delay(10);
}